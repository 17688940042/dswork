<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
	"-//ibatis.apache.org//DTD Mapper 3.0//EN" 
	"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="dswork.common.dao.DsCommonDao">

<resultMap id="resultDict" type="dswork.common.model.IDict">
	<result property="label" column="LABEL" />
	<result property="alias" column="ALIAS" />
	<result property="status" column="STATUS" />
</resultMap>
<select id="queryDict" resultMap="resultDict">
	select a.LABEL, a.ALIAS, a.STATUS from DS_COMMON_DICT_DATA a
	<if test="@Ognl@isNotEmpty(alias)">
		left join DS_COMMON_DICT_DATA b on a.PID=b.ID
		where a.NAME=#{name} and b.ALIAS=#{alias} 
	</if>
	<if test="@Ognl@isEmpty(alias)"> 
		where a.NAME=#{name} <if test="alias!=null"> and a.PID is null </if>
	</if>
	order by a.SEQ, a.ALIAS
</select>


<resultMap id="resultOrg" type="dswork.common.model.IOrg">
	<id property="id" column="ID" />
	<result property="pid" column="PID" />
	<result property="name" column="NAME" />
	<result property="status" column="STATUS" />
</resultMap>
<select id="queryOrg" resultMap="resultOrg">
	select ID, PID, NAME, STATUS from DS_COMMON_ORG
	<where>
		<if test="@Ognl@isNotEmpty(pid)">
			<if test="0 &lt; pid"> and PID=#{pid} </if>
			<if test="0 &gt;= pid"> and PID is null </if>
		</if>
		<if test="@Ognl@isNotEmpty(status)"> and STATUS=#{status} </if>
	</where>
	order by STATUS desc, SEQ asc
</select>






















<select id="selectFlowDeployid" resultType="java.lang.String">
	select DEPLOYID from DS_FLOW where ALIAS=#{alias} and VNUM=0
</select>


<insert id="insertFlowPi" parameterType="dswork.common.model.IFlowPi">
	<selectKey resultType="Long" order="AFTER" keyProperty="id">
		select LAST_INSERT_ID()
	</selectKey>
	insert into DS_FLOW_PI
	(ID, YWLSH, ALIAS, FLOWID, DEPLOYID, PIDAY, PIDAYTYPE, PISTART, PIEND, PIUPSTART, PIUPEND, STATUS, CACCOUNT, CNAME, PIALIAS)
	values
	(null, #{ywlsh}, #{alias}, #{flowid}, #{deployid}, #{piday}, #{pidaytype}, #{pistart},
		<if test="@Ognl@isEmpty(piend)">null</if><if test="@Ognl@isNotEmpty(piend)">#{piend}</if>,
		#{piupstart}, #{piupend}, #{status}, #{caccount}, #{cname}, #{pialias})
</insert>
<update id="updateFlowPiPialias">
	update DS_FLOW_PI set PIALIAS=#{pialias} where ID=#{id}
</update>
<update id="updateFlowPiStatus">
	update DS_FLOW_PI set STATUS=0 where ID=#{id}
</update>


<resultMap id="resultFlowTask" type="dswork.common.model.IFlowTask">
	<id property="id" column="ID" />
	<result property="flowid" column="FLOWID" />
	<result property="deployid" column="DEPLOYID" />
	<result property="talias" column="TALIAS" />
	<result property="tname" column="TNAME" />
	<result property="tnodeprev" column="TNODEPREV" />
	<result property="tnodenext" column="TNODENEXT" />
	<result property="tusers" column="TUSERS" />
	<result property="tmemo" column="TMEMO" />
</resultMap>
<select id="selectFlowTask" resultMap="resultFlowTask">
	select ID, FLOWID, DEPLOYID, TALIAS, TNAME, TNODEPREV, TNODENEXT, TUSERS, TMEMO
	from DS_FLOW_TASK where FLOWID=#{flowid} and TALIAS=#{talias}
</select>


<insert id="insertFlowPiData" parameterType="dswork.common.model.IFlowPiData">
	<selectKey resultType="Long" order="AFTER" keyProperty="id">
		select LAST_INSERT_ID()
	</selectKey>
	insert into DS_FLOW_PI_DATA
	(ID, PIID, TALIAS, TNAME, STATUS, PACCOUNT, PNAME, PTIME, PTYPE, MEMO)
	values
	(null, #{piid}, #{talias}, #{tname}, #{status}, #{paccount}, #{pname}, #{ptime}, #{ptype}, #{memo})
</insert>


<insert id="insertFlowPiDoing" parameterType="dswork.common.model.IFlowPiDoing">
	<selectKey resultType="Long" order="AFTER" keyProperty="id">
		select LAST_INSERT_ID()
	</selectKey>
	insert into DS_FLOW_PI_DOING
	(ID, PIID, YWLSH, FLOWID, TALIAS, TSTART, TACCOUNT, THACCOUNT, TCOUNT, TINTERFACE, UINTERFACE)
	values
	(null, #{piid}, #{ywlsh}, #{flowid}, #{talias}, #{tstart}, #{taccount}, 
		<if test="@Ognl@isEmpty(thaccount)">null</if><if test="@Ognl@isNotEmpty(thaccount)">#{thaccount}</if>,
		<if test="@Ognl@isEmpty(tcount)">null</if><if test="@Ognl@isNotEmpty(tcount)">#{tcount}</if>,
		#{tinterface}, #{uinterface})
</insert>
<delete id="deleteFlowPiDoing">
	delete from DS_FLOW_PI_DOING where ID=#{id}
</delete>
<update id="updateFlowPiDoing">
	update DS_FLOW_PI_DOING set TCOUNT=TCOUNT-1, TSTART=#{tstart}
	where PIID=#{piid} and TALIAS=#{talias} and TCOUNT&gt;0
</update>
<resultMap id="resultFlowPiDoing" type="dswork.common.model.IFlowPiDoing">
	<id property="id" column="ID" />
	<result property="piid" column="PIID" />
	<result property="ywlsh" column="YWLSH" />
	<result property="flowid" column="FLOWID" />
	<result property="talias" column="TALIAS" />
	<result property="talias" column="TALIAS" />
	<result property="tname" column="TNAME" />
	<result property="tstart" column="TSTART" />
	<result property="taccount" column="TACCOUNT" />
	<result property="thaccount" column="THACCOUNT" />
	<result property="tcount" column="TCOUNT" />
	<result property="tinterface" column="TINTERFACE" />
	<result property="uinterface" column="UINTERFACE" />
</resultMap>
<select id="selectFlowPiDoing" resultMap="resultFlowPiDoing">
	select ID, PIID, YWLSH, FLOWID, TALIAS, TNAME, TSTART, TACCOUNT, THACCOUNT, TCOUNT, TINTERFACE, UINTERFACE
	from DS_FLOW_PI_DOING where ID=#{id}
</select>
<select id="selectFlowPiDoingByPiid" resultMap="resultFlowPiDoing">
	select ID, PIID, YWLSH, FLOWID, TALIAS, TNAME, TSTART, TACCOUNT, THACCOUNT, TCOUNT, TINTERFACE, UINTERFACE
	from DS_FLOW_PI_DOING
	where PIID=#{piid} <if test="@Ognl@isNotEmpty(talias)"> and TALIAS=#{talias}</if>
</select>
<select id="queryFlowPiDoingTalias" resultType="java.lang.String">
	select TALIAS from DS_FLOW_PI_DOING where PIID=#{piid}
</select>
<select id="queryFlowPiDoing" resultMap="resultFlowPiDoing">
	select ID, PIID, YWLSH, FLOWID, TALIAS, TSTART, TACCOUNT, THACCOUNT, TCOUNT, TINTERFACE, UINTERFACE
	from DS_FLOW_PI_DOING where TACCOUNT=#{account} or THACCOUNT like concat('%', #{account}, '%')
</select>

</mapper>
